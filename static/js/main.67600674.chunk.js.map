{"version":3,"sources":["constants/index.ts","requests/index.ts","components/Tabs.tsx","components/NewsList.tsx","components/News.tsx","index.tsx"],"names":["tabs","getNews","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","topic","NEWS_URL","wrap","_context","prev","next","concat","fetch","then","response","json","abrupt","sent","stop","this","_x","apply","arguments","Tabs","activeTab","setActiveTab","isTabActive","tab","react_default","createElement","className","map","key","onClick","toUpperCase","NewsList","data","length","item","title","style","backgroundImage","urlToImage","backgroundSize","Date","publishedAt","toDateString","author","href","url","source","name","News","state","_this","setState","articles","_this$state","Fragment","components_Tabs","components_NewsList","React","Component","ReactDOM","render","components_News","document","getElementById"],"mappings":"gOAEaA,EAAiB,CAAC,SAAU,OAAQ,eAAgB,iCCCpDC,EAAO,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfJ,EADe,GAAAK,ODHS,wCCGTA,OACkBN,EADlB,YAAAM,ODFQ,oCCERH,EAAAE,KAAA,EAGRE,MAAMN,GAChBO,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAJR,cAAAP,EAAAQ,OAAA,SAAAR,EAAAS,MAAA,wBAAAT,EAAAU,SAAAd,EAAAe,SAAH,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,GC4BLC,EAtBgB,SAAAzB,GAAiC,IAA9B0B,EAA8B1B,EAA9B0B,UAAWC,EAAmB3B,EAAnB2B,aACrCC,EAAc,SAACC,GACnB,OAAIH,IAAcG,EACT,SAGF,IAGT,OAAOC,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,QAClBlC,EAAKmC,IAAI,SAAAJ,GAAG,OACZC,EAAA1B,EAAA2B,cAAA,OACEG,IAAML,EACNG,UAAS,OAAAnB,OAAUe,EAAYC,IAC/BM,QAAUR,EAAaE,IAErBA,EAAIO,mBCsBCC,EA1BoB,SAAArC,GAAc,IAAXsC,EAAWtC,EAAXsC,KACpC,OAAKA,EAIAA,EAAKC,OAIHT,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,aAClBM,EAAKL,IAAI,SAACO,GACV,OAAOV,EAAA1B,EAAA2B,cAAA,OAAKG,IAAMM,EAAKC,MAAQT,UAAU,YAAYU,MAAQ,CAC3DC,gBAAe,OAAA9B,OAAS2B,EAAKI,WAAd,KACfC,eAAgB,UAEhBf,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,UACbF,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,QAAS,IAAIc,KAAKN,EAAKO,aAAaC,gBACnDlB,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,SAAUQ,EAAKC,OAC9BX,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,UAASF,EAAA1B,EAAA2B,cAAA,uBAAxB,IAA+CS,EAAKS,QACpDnB,EAAA1B,EAAA2B,cAAA,KAAGC,UAAU,SAASkB,KAAOV,EAAKW,KAAQX,EAAKY,OAAOC,WAbrDvB,EAAA1B,EAAA2B,cAAA,kCAJAD,EAAA1B,EAAA2B,cAAA,0BC+BIuB,6MA3BbC,MAAQ,CACNjB,KAAM,GACNZ,UAAW5B,EAAK,MAOlB6B,aAAe,SAACD,GAAD,OAAuB,WACpC3B,EAAQ2B,GACLX,KAAK,SAAAuB,GAAI,OAAIkB,EAAKC,SAAS,CAAEnB,KAAMA,EAAKoB,SAAUhC,qGALrDL,KAAKM,aAAa7B,EAAK,GAAvBuB,oCAQoB,IAAAsC,EACQtC,KAAKkC,MAAzBjB,EADYqB,EACZrB,KAAMZ,EADMiC,EACNjC,UAEd,OAAOI,EAAA1B,EAAA2B,cAAAD,EAAA1B,EAAAwD,SAAA,KACL9B,EAAA1B,EAAA2B,cAAC8B,EAAD,CACEnC,UAAYA,EACZC,aAAeN,KAAKM,eAEtBG,EAAA1B,EAAA2B,cAAC+B,EAAD,CAAUxB,KAAOA,YAvBJyB,IAAMC,iBCpBzBC,IAASC,OAAOpC,EAAA1B,EAAA2B,cAACoC,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.67600674.chunk.js","sourcesContent":["export const BASE_URL: string = 'https://newsapi.org/v2/everything?q=';\nexport const API_KEY: string = '700e4adb5d1248b191265b4ceb3fc20e';\nexport const tabs: string[] = ['People', 'Auto', 'Technologies', 'Realty'];","import { BASE_URL, API_KEY } from '../constants';\n\n\nexport const getNews = async (topic: string) => {\n  const NEWS_URL: string = `${BASE_URL}${topic}&apiKey=${API_KEY}`;\n\n  return await fetch(NEWS_URL)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport { tabs } from '../constants';\n\n\ninterface Props {\n  activeTab: string;\n  setActiveTab: (activeTab: string) => () => void;\n}\n\nconst Tabs: React.SFC<Props> = ({ activeTab, setActiveTab }) => {\n  const isTabActive = (tab: string) => {\n    if (activeTab === tab) {\n      return 'active';\n    }\n\n    return '';\n  }\n\n  return <div className=\"tabs\">\n    { tabs.map(tab =>\n      <div\n        key={ tab }\n        className={ `tab ${isTabActive(tab)}` }\n        onClick={ setActiveTab(tab) }\n      >\n        { tab.toUpperCase() }\n      </div>\n    ) }\n  </div>\n}\n\nexport default Tabs;","import React from 'react';\n\n\ninterface Item {\n  \"source\": {\n    \"id\": null | string,\n    \"name\": string\n  },\n  \"author\": string,\n  \"title\": string,\n  \"description\": string,\n  \"url\": string,\n  \"urlToImage\": string,\n  \"publishedAt\": string,\n  \"content\": string;\n}\n\ninterface Props {\n  data: Item[];\n}\n\nconst NewsList: React.SFC<Props> = ({ data }) => {\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n\n  if (!data.length) {\n    return <div>There are no items.</div>;\n  }\n\n  return <div className=\"news-list\">\n    { data.map((item: Item) => {\n      return <div key={ item.title } className=\"news-item\" style={ {\n        backgroundImage: `url(${item.urlToImage})`,\n        backgroundSize: 'cover'\n      } }>\n        <div className=\"filter\">\n          <div className=\"date\">{ new Date(item.publishedAt).toDateString() }</div>\n          <div className=\"title\">{ item.title }</div>\n          <div className=\"author\"><span>Author:</span> { item.author }</div>\n          <a className=\"source\" href={ item.url }>{ item.source.name }</a>\n        </div>\n      </div>\n    }) }\n  </div>\n};\n\nexport default NewsList;","import React from 'react';\nimport { tabs } from '../constants';\nimport { getNews } from '../requests';\nimport Tabs from './Tabs';\nimport NewsList from './NewsList';\n\n\ninterface Item {\n  \"source\": {\n    \"id\": null | string,\n    \"name\": null | string\n  },\n  \"author\": null | string,\n  \"title\": null | string,\n  \"description\": null | string,\n  \"url\": null | string,\n  \"urlToImage\": null | string,\n  \"publishedAt\": null | string,\n  \"content\": null | string;\n}\n\ninterface State {\n  data: Item[];\n  activeTab: string;\n}\n\nclass News extends React.Component<{}, State, {}> {\n  state = {\n    data: [],\n    activeTab: tabs[0]\n  }\n\n  componentDidMount(): void {\n    this.setActiveTab(tabs[0])();\n  }\n\n  setActiveTab = (activeTab: string) => () => {\n    getNews(activeTab)\n      .then(data => this.setState({ data: data.articles, activeTab }));\n  }\n\n  render(): JSX.Element {\n    const { data, activeTab } = this.state;\n\n    return <>\n      <Tabs\n        activeTab={ activeTab }\n        setActiveTab={ this.setActiveTab }\n      />\n      <NewsList data={ data } />\n    </>\n  }\n}\n\nexport default News;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport News from './components/News';\nimport './css/index.css';\n\n\nReactDOM.render(<News />, document.getElementById('root'));"],"sourceRoot":""}